@use "../../../scss/utils/color_functions" as color_utils;
@use "../../../scss/mixins/alert" as alerts;
@use "../../../scss/color_vars" as colors;
@use "../../../scss/variables" as vars;

.alert {
    --#{vars.$prefix-bs}alert-link-color: inherit;
    --#{vars.$prefix-bs}alert-hr-color: inherit;
    --#{vars.$prefix-bs}alert-padding-y: 0.7rem;

    hr {
        border-top: 1px solid var(--#{vars.$prefix-bs}alert-hr-color);
        opacity: 0.4;
    }

    .alert-link {
        color: var(--#{vars.$prefix-bs}alert-link-color);
    }

    &.alert-dismissible {
        padding-right: 1rem;

        > .close {
            padding: .5rem;
        }
    }

    > .flex-fill ~ .#{vars.$prefix}btn-icon:last-child {
        margin-right: vars.$padding-sm * -1;
    }

    .#{vars.$prefix}btn-icon:last-child {
        --#{vars.$prefix-bs}btn-state-line-height: #{vars.$padding-xl};

        .#{vars.$prefix}ripple {
            --#{vars.$prefix-bs}btn-inner-state-width: #{vars.$padding-xl};
            --#{vars.$prefix-bs}btn-inner-state-height: #{vars.$padding-xl};
        }
    }
}

@each $name, $color in colors.$context-colors {
    $background-color: color_utils.theme-color-level(colors.$context-colors, $name, vars.$alert-bg-level);
    $border-color: color_utils.theme-color-level(colors.$context-colors, $name, vars.$alert-border-level);
    $text-color: color_utils.theme-color-level(colors.$context-colors, $name, vars.$alert-color-level);
    @include alerts.make-default-variant($name, $background-color, $border-color, $text-color);

    $outline-color: color_utils.theme-color-level(colors.$context-colors, $name, vars.$alert-color-level);
    @include alerts.make-outline-variant($name, $color);
    @include alerts.make-solid-variant($name, $color);
}
