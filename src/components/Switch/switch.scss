@import "../../../scss/colors";
@import "../../../scss/variables";
@import "../../../scss/mixins/switch";
@import "~compass-mixins/lib/compass/css3";

.#{$prefix}switch {
    --#{$prefix}switch-margin: #{$switch-margin};
    --#{$prefix}switch-thumb-bg: #{$grey-lighten-5};
    --#{$prefix}switch-thumb-color: #{$grey-lighten-5};
    --#{$prefix}switch-thumb-size: #{$switch-thumb-size};
    --#{$prefix}switch-touch-size: #{$switch-touch-size};
    --#{$prefix}switch-track-color: #{$grey-lighten-1};
    --#{$prefix}switch-track-height: #{$switch-track-height};
    --#{$prefix}switch-track-width: #{$switch-track-width};
    --#{$prefix}switch-inset-thumb-size: #{$switch-inset-thumb-size};
    --#{$prefix}switch-inset-track-height: #{$switch-inset-track-height};
    --#{$prefix}switch-inset-track-width: #{$switch-inset-track-width};
    --#{$prefix}switch-outline-stroke: #{$switch-outline-stroke};

    --#{$prefix}switch-state-box-shadow: #{$switch-shadows};
    --#{$prefix}switch-state-overlay-bg: transparent;
    --#{$prefix}switch-state-overlay-opacity: 0;
    --#{$prefix}switch-state-thumb-bg: var(--#{$prefix}switch-thumb-bg);
    --#{$prefix}switch-state-thumb-color: var(--#{$prefix}switch-thumb-color);
    --#{$prefix}switch-state-thumb-size: var(--#{$prefix}switch-thumb-size);
    --#{$prefix}switch-state-track-color: var(--#{$prefix}switch-track-color);
    --#{$prefix}switch-state-track-height: var(--#{$prefix}switch-track-height);
    --#{$prefix}switch-state-track-width: var(--#{$prefix}switch-track-width);

    @include display-flex();
    position: relative;

    &:not(.disabled):not(.readonly) {
        > .#{$prefix}switch-wrapper {
            cursor: pointer;
        }
    }

    > .#{$prefix}switch-wrapper {
        @include display-flex(inline-flex);
        margin: var(--#{$prefix}switch-margin);

        > .#{$prefix}switch-track {
            @include flexbox((display: flex, align-items: center));
            @include border-radius(var(--#{$prefix}switch-state-track-height));
            @include transition($md-transition-stand);
            background-color: var(--#{$prefix}switch-state-track-color);
            height: var(--#{$prefix}switch-state-track-height);
            min-width: var(--#{$prefix}switch-state-track-width);
            width: var(--#{$prefix}switch-state-track-width);
            margin: 3px 0;
            position: relative;

            > .#{$prefix}switch-thumb {
                @include border-radius($border-radius-circle);
                @include transition($md-transition-stand);
                @include box-shadow(var(--#{$prefix}switch-state-box-shadow));
                background-color: var(--#{$prefix}switch-state-thumb-bg);
                height: var(--#{$prefix}switch-state-thumb-size);
                width: var(--#{$prefix}switch-state-thumb-size);
                position: relative;

                &:before {
                    @include transform(translate(-50%, -50%));
                    content: " ";
                    height: var(--#{$prefix}switch-touch-size);
                    width: var(--#{$prefix}switch-touch-size);
                    position: absolute;
                    left: 50%;
                    top: 50%;
                    z-index: 11;
                }

                .#{$prefix}switch-overlay, .#{$prefix}ripple {
                    @include border-radius($border-radius-circle);
                    @include transform(translate(-50%, -50%));
                    height: var(--#{$prefix}switch-touch-size);
                    width: var(--#{$prefix}switch-touch-size);
                    left: 50%;
                    top: 50%;
                    position: absolute;
                }

                .#{$prefix}switch-overlay {
                    @include transition($transition-hoverable);
                    background-color: var(--#{$prefix}switch-state-overlay-bg);
                    opacity: var(--#{$prefix}switch-state-overlay-opacity);
                    pointer-events: none;
                }

                .#{$prefix}ripple {
                    .#{$prefix}ripple-animation {
                        background-color: var(--#{$prefix}switch-state-thumb-color);
                        opacity: .65;
                    }

                    > input {
                        display: none;
                    }
                }
            }
        }
    }

    .#{$prefix}switch-label {
        margin-bottom: 0;
        padding-left: 0;
        padding-top: $padding-base - .6;
        position: relative;

        &.#{$prefix}label-left {
            margin-right: $padding-sm;
            padding-right: $padding-base + .25;
        }

        &.#{$prefix}label-right {
            padding-left: $padding-base + .25;
        }
    }

    &.required {
        label:after {
            @include transform(translateX(calc(100% + 2px)));
            content: "*";
            font-weight: $font-weight-bold;
            line-height: 1em;
            position: absolute;
            right: 0;
            top: 10px;
        }
    }

    &.checked {
        > .#{$prefix}switch-wrapper {
            --#{$prefix}switch-state-box-shadow: var(--#{$prefix}switch-active-box-shadow);
            --#{$prefix}switch-state-thumb-bg: var(--#{$prefix}switch-active-thumb-bg);
            --#{$prefix}switch-state-thumb-color: var(--#{$prefix}switch-active-thumb-color);
            --#{$prefix}switch-state-track-color: var(--#{$prefix}switch-active-track-color);
            --#{$prefix}switch-state-translate-x: calc(var(--#{$prefix}switch-state-track-width) - var(--#{$prefix}switch-state-thumb-size));
            --#{$prefix}switch-state-transform-x: translatex(var(--#{$prefix}switch-state-translate-x));

            .#{$prefix}switch-thumb {
                transform: var(--#{$prefix}switch-state-transform-x);
            }
        }
    }

    &:not(.disabled):not(.readonly) {
        .#{$prefix}switch-thumb {
            &:hover {
                --#{$prefix}switch-state-overlay-bg: var(--#{$prefix}switch-thumb-color);
                --#{$prefix}switch-state-overlay-opacity: .09;
            }
        }

        &.checked {
            .#{$prefix}switch-thumb {
                &:hover {
                    --#{$prefix}switch-state-overlay-bg: var(--#{$prefix}switch-active-thumb-color);
                    --#{$prefix}switch-state-overlay-opacity: .22;
                }
            }
        }
    }

    &.readonly {
        > .#{$prefix}switch-label,
        > .#{$prefix}switch-wrapper {
            opacity: var(--#{$prefix}field-readonly-opacity);
        }
    }

    &.disabled {
        > .#{$prefix}switch-label {
            opacity: var(--#{$prefix}field-disabled-opacity);
        }

        > .#{$prefix}switch-wrapper {
            --#{$prefix}switch-state-box-shadow: #{$switch-disabled-shadows};
            --#{$prefix}switch-state-thumb-bg: #{$grey-lighten-1};
            --#{$prefix}switch-state-thumb-color: #{$grey-lighten-1};
            --#{$prefix}switch-state-track-color: #{$grey-lighten-2};
        }
    }

    &.disabled, &.readonly {
        > .#{$prefix}switch-wrapper {
            cursor: default;
        }
    }
}

@each $name, $color in map-remove($merge-theme-colors, 'black') {
    @include make-switch-variant($name, $color);
}
