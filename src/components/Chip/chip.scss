@use "sass:math";
@import "compass-mixins/lib/compass/css3";
@import "../../../scss/functions";
@import "../../../scss/mixins/chip";
@import "../../../scss/colors";
@import "../../../scss/variables";

.#{$prefix}chip {
    $disabled-bg: lighten($gray-500, 15%);
    $disabled-border-color: lighten($gray-500, 8%);
    --#{$prefix}chip-border-radius: #{$border-radius-lg};
    --#{$prefix}chip-border-width: 0;
    --#{$prefix}chip-disabled-bg: #{$disabled-bg};
    --#{$prefix}chip-disabled-border-color: #{$disabled-border-color};
    --#{$prefix}chip-disabled-color: #{$gray-900};
    --#{$prefix}chip-disabled-opacity: .5;
    --#{$prefix}chip-padding-x: #{$padding-base};

    @include flexbox((display: inline-flex, align-items: center));
    @include border-radius(var(--#{$prefix}chip-border-radius));
    background-color: var(--#{$prefix}chip-bg);
    border: var(--#{$prefix}chip-border-width) solid var(--#{$prefix}chip-border-color);
    color: var(--#{$prefix}chip-color);
    cursor: default;
    height: 2rem;
    max-width: 100%;
    line-height: 1;
    outline: none;
    overflow: hidden;
    position: relative;
    white-space: nowrap;
    vertical-align: middle;
    text-decoration: none !important;
    transition-duration: .75s;
    transition-property: all, opacity;
    transition-timing-function: $md-transition-drop-timing;

    &:not(.disabled):not(.readonly) {
        &:hover {
            @include box-shadow(0 1px 2px 0 rgba(50, 50, 50, 0.25), 0 2px 4px 2px rgba(10, 10, 10, 0.05));
            background-color: var(--#{$prefix}chip-hover-bg);
            border-color: var(--#{$prefix}chip-hover-border-color);
            color: var(--#{$prefix}chip-hover-color);
        }

        &:focus,
        &.focused,
        &.active {
            background-color: var(--#{$prefix}chip-active-bg);
            border-color: var(--#{$prefix}chip-active-border-color);
            color: var(--#{$prefix}chip-active-color);

            > .#{$prefix}chip-content {
                .#{$prefix}chip-icon {
                    color: var(--#{$prefix}chip-active-icon-color);
                }
            }

            &[class*="chip-outline"] {
                &:hover {
                    border-color: var(--#{$prefix}chip-hover-border-color);
                }
            }
        }

        &:focus, &.focused {
            @include box-shadow(0 0 0 0.2rem rgba(var(--#{$prefix}chip-focus-shadow-color), .4));
            border-color: var(--#{$prefix}chip-focus-border-color);
        }
    }

    &.disabled {
        background-color: var(--#{$prefix}chip-disabled-bg);
        border-color: var(--#{$prefix}chip-disabled-border-color);
        color: var(--#{$prefix}chip-disabled-color);
        opacity: var(--#{$prefix}chip-disabled-opacity);
    }

    &.#{$prefix}chip-clickable:not(.disabled):not(.readonly) {
        @include user-select(none);
        cursor: pointer;
    }

    > .#{$prefix}chip-content {
        @include flexbox((display: inline-flex, align-items: center));
        @include border-radius(var(--#{$prefix}chip-border-radius));
        padding: 0 var(--#{$prefix}chip-padding-x);
        max-width: 100%;

        > .#{$prefix}chip-text {
            > .caret-up,
            > .caret-down,
            > .triangle-up,
            > .triangle-down {
                &:last-child {
                    margin-right: -$padding-xs;
                }
            }
        }

        .#{$prefix}chip-icon {
            color: var(--#{$prefix}chip-icon-color);
        }

        > .#{$prefix}chip-avatar {
            @include flexbox((display: flex, align-self: center, align-items: center));
            @include transition(.3s $md-transition-stand-timing, visibility);
            margin-left: -($padding-base - .25);
            margin-right: $padding-sm;

            &.#{$prefix}chip-avatar-bounded {
                margin-left: -$padding-base;
            }
        }

        > .#{$prefix}chip-icon {
            @include flexbox((display: flex, align-self: center, align-items: center));
            @include transition(width visibility 150ms 0ms $md-transition-default-timing);
            margin-left: -$padding-sm;
            margin-right: $padding-sm;
            width: 100%;

            &.order-1 {
                margin-left: $padding-sm;
                margin-right: math.div(-$padding-xs, 2);
            }

            &.#{$prefix}empty-icon {
                width: 0;
            }

            &:not(.#{$prefix}empty-icon) ~ .#{$prefix}chip-avatar {
                margin-left: 0;
            }
        }

        > .#{$prefix}btn-icon {
            margin-left: $padding-sm;
            margin-right: -($padding-sm + .25);
        }
    }

    &.#{$prefix}chip-pill {
        --#{$prefix}chip-border-radius: #{$border-radius-pill};
    }

    &.#{$prefix}chip-sm {
        --#{$prefix}chip-border-radius: #{$border-radius-base};
        --#{$prefix}chip-padding-x: .75rem;
        font-size: 85%;
        height: 1.56rem;
    }

    &.#{$prefix}chip-lg {
        font-size: 120%;
        height: 3rem;

        > .#{$prefix}chip-content {
            padding: 0 $padding-lg;

            > .#{$prefix}chip-icon {
                margin-left: -.625rem; // -10px
            }

            > .#{$prefix}chip-avatar {
                margin-left: -($padding-base + .125); // -18px

                &.#{$prefix}chip-avatar-bounded {
                    margin-left: -$padding-lg;
                }
            }

            > .#{$prefix}btn-icon {
                margin-right: -($padding-sm + .5);
            }
        }
    }

    &:not(.#{$prefix}chip-lg):not(.#{$prefix}chip-sm) {
        .#{$prefix}btn-icon {
            --#{$bs-prefix}btn-state-line-height: #{$padding-lg};

            .#{$prefix}ripple {
                --#{$bs-prefix}btn-inner-state-width: #{$padding-lg};
                --#{$bs-prefix}btn-inner-state-height: #{$padding-lg};
            }
        }
    }
    &.#{$prefix}chip-sm {
        .#{$prefix}btn-icon {
            --#{$bs-prefix}btn-state-line-height: #{$padding-base + .125};

            .#{$prefix}ripple {
                --#{$bs-prefix}btn-inner-state-width: #{$padding-base + .125};
                --#{$bs-prefix}btn-inner-state-height: #{$padding-base + .125};
            }
        }
    }

    &[class*="chip-outline"] {
        --#{$prefix}chip-border-width: thin;
    }

    ~ .#{$prefix}chip {
        margin-left: $padding-sm;
    }
}

@each $color_name, $color in map-remove($merge-theme-colors, 'black') {
    @include make-chip-variant($color_name, $color);
    @include make-chip-outline-variant($color_name, $color);
}
