@use 'sass:map';
@use '../../../scss/mixins/progress';
@use '../../../scss/color_vars' as colors;
@use '../../../scss/variables' as vars;

@layer components {
  .#{vars.$prefix}progress-spinner {
    //display: inline-flex;
    //position: relative;

    &.#{vars.$prefix}indeterminate {
      animation: #{vars.$prefix}spin 2s linear infinite;

      &.#{vars.$prefix}progress-spinner-enter-from,
      &.#{vars.$prefix}progress-spinner-leave-active {
        transition-duration: 0.4s;

        .#{vars.$prefix}progress-spinner-draw {
          opacity: 0;
          transform: scale(0.1);
        }
      }

      .#{vars.$prefix}progress-spinner-circle {
        animation: 4s infinite vars.$transition-stand-animation;
      }
    }

    &.#{vars.$prefix}determinate {
      &.#{vars.$prefix}progress-spinner-enter-active,
      &.#{vars.$prefix}progress-spinner-leave-active {
        transition-duration: 2s;

        .#{vars.$prefix}progress-spinner-draw {
          // prettier-ignore
          animation: #{vars.$prefix}progress-spinner-initial-rotate 1.98s vars.$transition-stand-animation forwards;
        }
      }

      .#{vars.$prefix}progress-spinner-draw {
        transition: none;
      }
    }

    > .#{vars.$prefix}progress-spinner-draw {
      overflow: visible;
      transform: scale(1) rotate(-90deg);
      transform-origin: center;
      transition: 0.4s vars.$transition-stand-animation;
      will-change: opacity, transform;
    }

    .#{vars.$prefix}progress-spinner-circle {
      fill: none;
      transform-origin: center;
      transition: stroke-dashoffset 0.25s vars.$transition-stand-animation;
      will-change: stroke-dashoffset, stroke-dasharray, stroke-width, animation-name, r;
    }
  }

  .#{vars.$prefix}progress-bar-enter-from,
  .#{vars.$prefix}progress-bar-leave-active {
    opacity: 0.5;
    transform: translateZ(0) scaleY(0);
  }

  .#{vars.$prefix}progress-bar {
    //overflow: hidden;
    //position: relative;
    transform: translateZ(0) scaleY(1);
    transform-origin: center center;
    // prettier-ignore
    transition: opacity 0.3s vars.$transition-default-animation, transform 0.4s vars.$transition-default-animation;
    will-change: opacity, transform;

    &.#{vars.$prefix}indeterminate,
    &.#{vars.$prefix}query {
      > .#{vars.$prefix}progress-bar-track {
        left: -150%;
        animation: #{vars.$prefix}progress-bar-indeterminate-track 2s infinite linear;

        &:after {
          // prettier-ignore
          animation: #{vars.$prefix}progress-bar-indeterminate-track-alternate 2s infinite linear;
        }
      }

      > .#{vars.$prefix}progress-bar-fill {
        left: -55%;
        animation: #{vars.$prefix}progress-bar-indeterminate-fill 2s infinite linear;

        &:after {
          // prettier-ignore
          animation: #{vars.$prefix}progress-bar-indeterminate-fill-alternate 2s infinite linear;
        }
      }
    }

    &.#{vars.$prefix}determinate,
    &.#{vars.$prefix}buffer {
      > .#{vars.$prefix}progress-bar-fill,
      > .#{vars.$prefix}progress-bar-track,
      > .#{vars.$prefix}progress-bar-buffer {
        transition: 0.25s vars.$transition-stand-animation;
      }
    }

    &.#{vars.$prefix}determinate {
      > .#{vars.$prefix}progress-bar-track {
        display: none;
      }
    }

    &.#{vars.$prefix}buffer {
      > .#{vars.$prefix}progress-bar-buffer {
        border-top: 4px dotted;
        animation: #{vars.$prefix}progress-bar-buffer 0.25s infinite linear;
      }
    }

    &.#{vars.$prefix}query {
      transform: rotateZ(180deg);
    }

    > .#{vars.$prefix}progress-bar-buffer,
    > .#{vars.$prefix}progress-bar-track,
    > .#{vars.$prefix}progress-bar-fill {
      transform-origin: top left;

      &,
      &:after {
        width: 100%;
        height: 100%;
        position: absolute;
        will-change: transform;
      }

      &:after {
        display: inline-block;
        left: 0;
        content: ' ';
      }
    }

    @include progress.make-css-vars();
  }

  @each $name, $color in map.remove(colors.$context-colors, 'light') {
    @include progress.make-bar-variant($name, $color);
    @include progress.make-spinner-variant($name, $color);
  }

  .#{vars.$prefix}simple-progress {
    --#{vars.$prefix}progress-bg: #{vars.$progress-bg};
    --#{vars.$prefix}progress-font-size: #{vars.$progress-font-size};
    --#{vars.$prefix}progress-height: #{vars.$progress-height};
    --#{vars.$prefix}progress-bar-bg: #{vars.$progress-bar-bg};
    --#{vars.$prefix}progress-bar-color: #{vars.$progress-bar-color};
    --#{vars.$prefix}progress-bar-transition: #{vars.$progress-bar-transition};
    --#{vars.$prefix}progress-border-radius: #{vars.$progress-border-radius};
    --#{vars.$prefix}progress-box-shadow: #{vars.$progress-box-shadow};

    //display: flex;
    //flex-grow: 1;
    //overflow: hidden;
    height: var(--#{vars.$prefix}progress-height);
    font-size: var(--#{vars.$prefix}progress-font-size);
    background-color: var(--#{vars.$prefix}progress-bg);
    border-radius: var(--#{vars.$prefix}progress-border-radius);
    box-shadow: var(--#{vars.$prefix}progress-box-shadow);
  }

  .#{vars.$prefix}simple-progress-bar {
    //display: flex;
    flex-direction: column;
    //justify-content: center;
    //overflow: hidden;
    text-align: center;
    white-space: nowrap;
    color: var(--#{vars.$prefix}progress-bar-color);
    background-color: var(--#{vars.$prefix}progress-bar-bg);
    transition: var(--#{vars.$prefix}progress-bar-transition);
  }

  .#{vars.$prefix}simple-progress-wrapper {
    --#{vars.$prefix}progress-color: currentColor;
    --#{vars.$prefix}progress-font-size: #{vars.$progress-font-size};
    --#{vars.$prefix}progress-label-font-size: 0.825rem;
    --#{vars.$prefix}progress-label-font-weight: 600;

    font-size: var(--#{vars.$prefix}progress-font-size);

    > .#{vars.$prefix}progress-label:first-child {
      margin-bottom: 3px;
    }

    .#{vars.$prefix}progress-label {
      color: var(--#{vars.$prefix}progress-color);
      text-align: center;

      > .text-label {
        font-size: var(--#{vars.$prefix}progress-label-font-size);
        font-weight: var(--#{vars.$prefix}progress-label-font-weight);
      }
    }
  }

  .#{vars.$prefix}progress-bar-striped {
    // prettier-ignore
    background-image: linear-gradient(45deg, oklch(1 0 89.876 / 0.15) 25%, transparent 25%, transparent 50%, oklch(1 0 89.876 / 0.15) 50%, oklch(1 0 89.876 / 0.15) 75%, transparent 75%, transparent);
    // prettier-ignore
    background-size: var(--#{vars.$prefix}progress-height) var(--#{vars.$prefix}progress-height);
  }

  .#{vars.$prefix}progress-bar-animated {
    animation: vars.$progress-bar-animation-timing #{vars.$prefix}progress-bar-stripes;

    @media (prefers-reduced-motion: reduce) {
      animation: none;
    }
  }
}

@layer animations {
  @keyframes #{vars.$prefix}progress-spinner-initial-rotate {
    0% {
      opacity: 0;
      transform: rotate(-90deg) translateZ(0);
    }
    20% {
      opacity: 1;
    }
    100% {
      transform: rotate(270deg) translateZ(0);
    }
  }

  @keyframes #{vars.$prefix}progress-spinner-stroke-rotate-fallback {
    0% {
      transform: rotate(0);
    }
    25% {
      transform: rotate(1170deg);
    }
    50% {
      transform: rotate(2340deg);
    }
    75% {
      transform: rotate(3510deg);
    }
    100% {
      transform: rotate(4680deg);
    }
  }

  @keyframes #{vars.$prefix}progress-bar-indeterminate-track {
    0% {
      transform: translateX(0);
    }
    20% {
      animation-timing-function: cubic-bezier(0.5, 0, 0.7, 0.5);
      transform: translateX(0);
    }
    60% {
      animation-timing-function: cubic-bezier(0.3, 0.38, 0.55, 0.96);
      transform: translateX(83.67%);
    }
    100% {
      transform: translateX(200.61%);
    }
  }

  @keyframes #{vars.$prefix}progress-bar-indeterminate-track-alternate {
    0% {
      transform: scaleX(0.08);
    }
    35% {
      animation-timing-function: cubic-bezier(0.33, 0.12, 0.79, 1);
      transform: scaleX(0.08);
    }
    70% {
      animation-timing-function: cubic-bezier(0.06, 0.11, 0.6, 1);
      transform: scaleX(0.66);
    }
    100% {
      transform: scaleX(0.08);
    }
  }

  @keyframes #{vars.$prefix}progress-bar-indeterminate-fill {
    0% {
      animation-timing-function: cubic-bezier(0.15, 0, 0.52, 0.41);
      transform: translateX(0);
    }
    25% {
      animation-timing-function: cubic-bezier(0.31, 0.28, 0.8, 0.73);
      transform: translateX(37.65%);
    }
    50% {
      animation-timing-function: cubic-bezier(0.4, 0.63, 0.6, 0.9);
      transform: translateX(84.39%);
    }
    100% {
      transform: translateX(160.28%);
    }
  }

  @keyframes #{vars.$prefix}progress-bar-indeterminate-fill-alternate {
    0% {
      animation-timing-function: cubic-bezier(0.15, 0, 0.52, 0.41);
      transform: scaleX(0.08);
    }
    20% {
      animation-timing-function: cubic-bezier(0.31, 0.28, 0.8, 0.73);
      transform: scaleX(0.46);
    }
    45% {
      animation-timing-function: cubic-bezier(0.4, 0.63, 0.6, 0.9);
      transform: scaleX(0.73);
    }
    100% {
      transform: scaleX(0.08);
    }
  }

  @keyframes #{vars.$prefix}progress-bar-buffer {
    to {
      transform: translate3D(-8px, 0, 0);
    }
  }

  @keyframes #{vars.$prefix}progress-bar-stripes {
    0% {
      background-position-x: vars.$progress-height;
    }
  }
}
