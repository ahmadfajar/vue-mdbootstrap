@use "../../../scss/mixins/progress";
@use "../../../scss/color_vars" as colors;
@use "../../../scss/variables" as vars;


@keyframes #{vars.$prefix}spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

@keyframes #{vars.$prefix}progress-spinner-initial-rotate {
    0% {
        opacity: 0;
        transform: rotate(-90deg) translateZ(0);
    }
    20% {
        opacity: 1;
    }
    100% {
        transform: rotate(270deg) translateZ(0);
    }
}

@keyframes #{vars.$prefix}progress-spinner-stroke-rotate-fallback {
    0% {
        transform: rotate(0)
    }
    25% {
        transform: rotate(1170deg)
    }
    50% {
        transform: rotate(2340deg)
    }
    75% {
        transform: rotate(3510deg)
    }
    100% {
        transform: rotate(4680deg)
    }
}

@keyframes #{vars.$prefix}progress-bar-indeterminate-track {
    0% {
        transform: translateX(0)
    }
    20% {
        animation-timing-function: cubic-bezier(.5, 0, .70, .5);
        transform: translateX(0)
    }
    60% {
        animation-timing-function: cubic-bezier(.30, .38, .55, .96);
        transform: translateX(83.67%)
    }
    100% {
        transform: translateX(200.61%)
    }
}

@keyframes #{vars.$prefix}progress-bar-indeterminate-track-alternate {
    0% {
        transform: scaleX(.08)
    }
    35% {
        animation-timing-function: cubic-bezier(.33, .12, .79, 1);
        transform: scaleX(.08)
    }
    70% {
        animation-timing-function: cubic-bezier(.06, .11, .6, 1);
        transform: scaleX(.66)
    }
    100% {
        transform: scaleX(.08)
    }
}

@keyframes #{vars.$prefix}progress-bar-indeterminate-fill {
    0% {
        animation-timing-function: cubic-bezier(.15, 0, .52, .41);
        transform: translateX(0)
    }
    25% {
        animation-timing-function: cubic-bezier(.31, .28, .8, .73);
        transform: translateX(37.65%)
    }
    50% {
        animation-timing-function: cubic-bezier(.4, .63, .6, .90);
        transform: translateX(84.39%)
    }
    100% {
        transform: translateX(160.28%)
    }
}

@keyframes #{vars.$prefix}progress-bar-indeterminate-fill-alternate {
    0% {
        animation-timing-function: cubic-bezier(.15, 0, .52, .41);
        transform: scaleX(.08)
    }
    20% {
        animation-timing-function: cubic-bezier(.31, .28, .8, .73);
        transform: scaleX(.46)
    }
    45% {
        animation-timing-function: cubic-bezier(.4, .63, .6, .90);
        transform: scaleX(.73)
    }
    100% {
        transform: scaleX(.08)
    }
}

@keyframes #{vars.$prefix}progress-bar-buffer {
    to {
        transform: translate3D(-8px, 0, 0);
    }
}

.#{vars.$prefix}spin {
    animation: #{vars.$prefix}spin 2s infinite linear;
}

.#{vars.$prefix}pulse {
    animation: #{vars.$prefix}spin 1.5s infinite steps(8);
}

.#{vars.$prefix}mask-loader {
    display: flex;
    align-items: center;
    justify-content: center;
    left: 0;
    top: 0;
    right: 0;
    max-height: 100%;
    width: 100%;
    height: 100%;
    position: absolute;
}

.#{vars.$prefix}progress-wrapper {
    --#{vars.$prefix}progress-color: currentColor;
    --#{vars.$prefix}progress-font-size: .75rem;
    --#{vars.$prefix}progress-label-font-size: .825rem;
    --#{vars.$prefix}progress-label-font-weight: 600;

    font-size: var(--#{vars.$prefix}progress-font-size);

    > .#{vars.$prefix}progress-label:first-child {
        margin-bottom: 3px;
    }

    .#{vars.$prefix}progress-label {
        color: var(--#{vars.$prefix}progress-color);
        text-align: center;

        > .text-label {
            font-size: var(--#{vars.$prefix}progress-label-font-size);
            font-weight: var(--#{vars.$prefix}progress-label-font-weight);
        }
    }

    .progress {
        --#{vars.$prefix-bs}progress-font-size: var(--#{vars.$prefix}progress-font-size);
    }
}

.#{vars.$prefix}progress-spinner {
    display: inline-flex;
    position: relative;

    &.#{vars.$prefix}indeterminate {
        animation: #{vars.$prefix}spin 2s linear infinite;

        &.#{vars.$prefix}progress-spinner-enter-from,
        &.#{vars.$prefix}progress-spinner-leave-active {
            transition-duration: .4s;

            .#{vars.$prefix}progress-spinner-draw {
                opacity: 0;
                transform: scale(.1);
            }
        }

        .#{vars.$prefix}progress-spinner-circle {
            animation: 4s infinite vars.$transition-stand-animation;
        }
    }

    &.#{vars.$prefix}determinate {
        &.#{vars.$prefix}progress-spinner-enter-active,
        &.#{vars.$prefix}progress-spinner-leave-active {
            transition-duration: 2s;

            .#{vars.$prefix}progress-spinner-draw {
                animation: #{vars.$prefix}progress-spinner-initial-rotate 1.98s vars.$transition-stand-animation forwards;
            }
        }

        .#{vars.$prefix}progress-spinner-draw {
            transition: none;
        }
    }

    > .#{vars.$prefix}progress-spinner-draw {
        overflow: visible;
        transform: scale(1) rotate(-90deg);
        transform-origin: center;
        transition: .4s vars.$transition-stand-animation;
        will-change: opacity, transform;
    }

    .#{vars.$prefix}progress-spinner-circle {
        fill: none;
        transform-origin: center;
        transition: stroke-dashoffset .25s vars.$transition-stand-animation;
        will-change: stroke-dashoffset, stroke-dasharray, stroke-width, animation-name, r;
    }
}

.#{vars.$prefix}progress-bar-enter-from,
.#{vars.$prefix}progress-bar-leave-active {
    opacity: .5;
    transform: translateZ(0) scaleY(0);
}

.#{vars.$prefix}progress-bar {
    overflow: hidden;
    position: relative;
    transform: translateZ(0) scaleY(1);
    transform-origin: center center;
    transition: opacity .3s vars.$transition-default-animation, transform .4s vars.$transition-default-animation;
    will-change: opacity, transform;

    &.#{vars.$prefix}indeterminate,
    &.#{vars.$prefix}query {
        > .#{vars.$prefix}progress-bar-track {
            left: -150%;
            animation: #{vars.$prefix}progress-bar-indeterminate-track 2s infinite linear;

            &:after {
                animation: #{vars.$prefix}progress-bar-indeterminate-track-alternate 2s infinite linear;
            }
        }

        > .#{vars.$prefix}progress-bar-fill {
            left: -55%;
            animation: #{vars.$prefix}progress-bar-indeterminate-fill 2s infinite linear;

            &:after {
                animation: #{vars.$prefix}progress-bar-indeterminate-fill-alternate 2s infinite linear;
            }
        }
    }

    &.#{vars.$prefix}determinate,
    &.#{vars.$prefix}buffer {
        > .#{vars.$prefix}progress-bar-fill,
        > .#{vars.$prefix}progress-bar-track,
        > .#{vars.$prefix}progress-bar-buffer {
            transition: .25s vars.$transition-stand-animation;
        }
    }

    &.#{vars.$prefix}determinate {
        > .#{vars.$prefix}progress-bar-track {
            display: none;
        }
    }

    &.#{vars.$prefix}buffer {
        > .#{vars.$prefix}progress-bar-buffer {
            border-top: 4px dotted;
            animation: #{vars.$prefix}progress-bar-buffer .25s infinite linear;
        }
    }

    &.#{vars.$prefix}query {
        transform: rotateZ(180deg);
    }

    > .#{vars.$prefix}progress-bar-buffer,
    > .#{vars.$prefix}progress-bar-track,
    > .#{vars.$prefix}progress-bar-fill {
        transform-origin: top left;

        &, &:after {
            width: 100%;
            height: 100%;
            position: absolute;
            will-change: transform;
        }

        &:after {
            display: inline-block;
            left: 0;
            content: " "
        }
    }

    @include progress.make-css-vars();
}

@each $name, $color in colors.$context-colors {
    @include progress.make-bar-variant($name, $color);
    @include progress.make-spinner-variant($name, $color);
}
