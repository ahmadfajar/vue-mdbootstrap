@import "../../../scss/colors";
@import "../../../scss/variables";
@import "../../../scss/functions";
@import "../../../scss/mixins/checkbox";
@import "~compass-mixins/lib/compass/css3";

.#{$prefix}checkbox {
    --#{$prefix}checkbox-size: #{$checkbox-size};
    --#{$prefix}checkbox-touch-size: #{$checkbox-touch-size};
    --#{$prefix}checkbox-border-radius: #{$border-radius-sm};
    --#{$prefix}checkbox-stroke: #{$checkbox-stroke};
    --#{$prefix}checkbox-margin: #{$checkbox-margin};
    --#{$prefix}checkbox-indeterminate-width: #{$checkbox-indeterminate-width};
    --#{$prefix}checkbox-disabled-bg: transparent;
    --#{$prefix}checkbox-disabled-opacity: calc(var(--#{$prefix}field-disabled-opacity) - .2);
    --#{$prefix}checkbox-state-bg: transparent;
    --#{$prefix}checkbox-state-color: currentColor;
    --#{$prefix}checkbox-state-opacity: 1;
    --#{$prefix}checkbox-state-inner-color: transparent;
    --#{$prefix}checkbox-state-inner-opacity: 0;
    --#{$prefix}checkbox-state-overlay-bg: transparent;
    --#{$prefix}checkbox-state-overlay-opacity: 0;

    @include display-flex(inline-flex);
    margin: var(--#{$prefix}checkbox-margin);
    position: relative;
    cursor: pointer;

    > .#{$prefix}checkbox-inner {
        @include transition($md-transition-stand);
        @include border-radius(var(--#{$prefix}checkbox-border-radius));
        background-color: var(--#{$prefix}checkbox-state-bg);
        border: var(--#{$prefix}checkbox-stroke) solid var(--#{$prefix}checkbox-state-color);
        opacity: var(--#{$prefix}checkbox-state-opacity);
        height: var(--#{$prefix}checkbox-size);
        min-width: var(--#{$prefix}checkbox-size);
        width: var(--#{$prefix}checkbox-size);
        position: relative;

        &:focus {
            outline: none;
        }

        &:before,
        &:after {
            @include transition($md-transition-drop);
            content: " ";
            position: absolute;
        }

        &:before {
            @include border-radius($border-radius-circle);
            @include transform(translate(-50%, -50%));
            height: var(--#{$prefix}checkbox-touch-size);
            width: var(--#{$prefix}checkbox-touch-size);
            left: 50%;
            top: 50%;
            z-index: 11;
        }

        &:after {
            @include transform(rotate(45deg) scale3D(.15, .15, 1));
            opacity: var(--#{$prefix}checkbox-state-inner-opacity);
            border: var(--#{$prefix}checkbox-stroke) solid var(--#{$prefix}checkbox-state-inner-color);
            border-top: 0;
            border-left: 0;
            height: 13px;
            width: 7px;
            left: 4px;
            top: 0;
            z-index: 12;
        }

        .#{$prefix}checkbox-overlay {
            @include transition($transition-hoverable);
            @include border-radius($border-radius-circle);
            @include transform(translate(-50%, -50%));
            background-color: var(--#{$prefix}checkbox-state-overlay-bg);
            opacity: var(--#{$prefix}checkbox-state-overlay-opacity);
            height: var(--#{$prefix}checkbox-touch-size);
            width: var(--#{$prefix}checkbox-touch-size);
            left: 50% !important;
            top: 50% !important;
            pointer-events: none;
            position: absolute;
        }

        .#{$prefix}ripple {
            @include border-radius($border-radius-circle);
            @include transform(translate(-50%, -50%));
            height: var(--#{$prefix}checkbox-touch-size);
            width: var(--#{$prefix}checkbox-touch-size);
            left: 50% !important;
            top: 50% !important;

            .#{$prefix}ripple-animation {
                background-color: var(--#{$prefix}checkbox-bg);
                opacity: .65;
            }

            > input {
                display: none;
            }
        }
    }

    > .#{$prefix}checkbox-label {
        @include user-select(none);
        opacity: var(--#{$prefix}checkbox-state-opacity);
        line-height: var(--#{$prefix}checkbox-size);
        height: var(--#{$prefix}checkbox-size);
        margin-bottom: 0;
        padding-left: $padding-base;
        position: relative;
        cursor: pointer;
    }

    &.#{$prefix}indeterminate {
        > .#{$prefix}checkbox-inner {
            &:after {
                @include transform(translate(-50%, -50%) !important);
                border-width: 0 0 var(--#{$prefix}checkbox-stroke);
                border-style: solid;
                width: var(--#{$prefix}checkbox-indeterminate-width);
                height: var(--#{$prefix}checkbox-stroke);
                left: 50%;
                top: 50%;
                opacity: 0;
                z-index: 7;
            }
        }
    }

    &.checked {
        --#{$prefix}checkbox-state-bg: var(--#{$prefix}checkbox-bg);
        --#{$prefix}checkbox-state-color: var(--#{$prefix}checkbox-bg);
        --#{$prefix}checkbox-state-inner-color: var(--#{$prefix}checkbox-color);
        --#{$prefix}checkbox-state-inner-opacity: 1;

        > .#{$prefix}checkbox-inner {
            &:after {
                @include transform(rotate(45deg) scale3D(1, 1, 1));
                @include transition($md-transition-stand);
            }
        }
    }

    &:not(.disabled):not(.readonly) {
        > .#{$prefix}checkbox-inner {
            &:hover {
                --#{$prefix}checkbox-state-overlay-bg: currentColor;
                --#{$prefix}checkbox-state-overlay-opacity: .09;
            }
        }

        &.checked {
            > .#{$prefix}checkbox-inner {
                &:hover {
                    --#{$prefix}checkbox-state-overlay-bg: var(--#{$prefix}checkbox-bg);
                    --#{$prefix}checkbox-state-overlay-opacity: .22;
                }
            }
        }
    }

    &.required {
        label:after {
            @include transform(translateX(calc(100% + 2px)));
            right: 0;
            content: "*";
            line-height: 1em;
            position: absolute;
            vertical-align: top;
            top: var(--#{$prefix}checkbox-stroke);
        }
    }

    &.disabled, &.readonly {
        --#{$prefix}checkbox-state-opacity: var(--#{$prefix}field-readonly-opacity);
        cursor: default;

        > .#{$prefix}checkbox-label {
            cursor: default;
        }
    }

    &.disabled {
        --#{$prefix}checkbox-state-bg: var(--#{$prefix}checkbox-disabled-bg);
        --#{$prefix}checkbox-state-color: currentColor;
        --#{$prefix}checkbox-state-opacity: var(--#{$prefix}checkbox-disabled-opacity);
        --#{$prefix}checkbox-state-inner-color: currentColor;
    }
}

@each $name, $color in map-remove($merge-theme-colors, 'black') {
    @include make-checkbox($name, $color);
}
