/* BsAlert mixins */
@mixin make-outline-alert($name, $color) {
    .alert-outline-#{$name} {
        color: $color;
        border-color: lighten($color, 5%);

        hr {
            border-top-color: lighten($color, 5%);
        }

        .alert-link {
            color: darken($color, 10%);
        }
    }
}

/* BsProgress mixins */
@mixin progress-bar-indeterminate($color) {
    background-color: rgba($color, .24);

    .#{$prefix}-progress-bar-track,
    .#{$prefix}-progress-bar-fill {
        &:after {
            background-color: $color;
        }
    }
}

@mixin progress-bar-determinate($color) {
    background-color: rgba($color, .24);

    .#{$prefix}-progress-bar-fill {
        background-color: $color;
    }
}

@mixin progress-bar-buffer($color) {
    .#{$prefix}-progress-bar-fill {
        background-color: $color;
    }

    .#{$prefix}-progress-bar-track {
        background-color: rgba($color, .38);
    }

    .#{$prefix}-progress-bar-buffer {
        border-color: rgba($color, .38);
    }
}

@mixin make-progress-bar($name, $color) {
    .progress-bar-#{$name} {
        &.#{$prefix}-indeterminate {
            @include progress-bar-indeterminate($color);
        }

        &.#{$prefix}-determinate {
            @include progress-bar-determinate($color);
        }

        &.#{$prefix}-buffer {
            @include progress-bar-buffer($color);
        }
    }
}

@mixin make-progress-spinner($name, $color) {
    .spinner-#{$name} {
        .#{$prefix}-progress-spinner-circle {
            stroke: $color;
        }
    }
}

/* BsGrid mixins */
@mixin grid-rowstate-variant($name, $color) {
    .#{$prefix}-state-#{$name} {
        background-color: rgba($color, .08);
    }
}

/* BsList mixins */
@mixin bslist-variant($name, $color) {
    .#{$prefix}-list-#{$name} {
        background-color: $color;

        .#{$prefix}-divider {
            @if (lightness($color) < 81) {
                background-color: rgba($white-base, .2);
            }
        }

        .#{$prefix}-subheader {
            @if (lightness($color) > 80) {
                color: darken($gray-500, 5%);
            } @else {
                color: rgba($white-base, .8);
            }
        }

        .#{$prefix}-list-tile {
            &:not(.#{$prefix}-disabled) {
                &.#{$prefix}-link:hover {
                    background-color: set-hoverable-bgcolor($color);
                }

                .#{$prefix}-list-tile-leading,
                .#{$prefix}-list-tile-action {
                    color: set-leading-text-color($color);
                }

                .#{$prefix}-list-tile-title {
                    color: set-notification-text-color($color);
                }

                .#{$prefix}-list-tile-subtitle {
                    color: set-subtitle-text-color($color);
                }

                .#{$prefix}-checkbox {
                    &:not(.#{$prefix}-checked) {
                        .#{$prefix}-checkbox-inner {
                            @if (lightness($color) < 80) {
                                border-color: rgba($white-base, 0.6);
                            }
                        }
                    }
                }

                &.active, &.#{$prefix}-active {
                    background-color: set-hoverable-bgcolor($color, .22);

                    .#{$prefix}-list-tile-title {
                        font-weight: $font-weight-bold;
                    }

                    @if (lightness($color) > 80) {
                        color: $primary-color-dark;

                        .#{$prefix}-list-tile-title {
                            color: $primary-color-dark;
                        }

                        .#{$prefix}-list-tile-subtitle {
                            color: lighten($primary-color-dark, 20%);
                        }

                        .#{$prefix}-list-tile-leading {
                            &.#{$prefix}-has-icon {
                                color: rgba($primary-color-dark, .54);
                            }
                        }
                    } @else {
                        color: $white;

                        .#{$prefix}-list-tile-leading {
                            &.#{$prefix}-has-icon {
                                color: rgba($white-base, .8);
                            }
                        }
                    }
                }
            }

            &.#{$prefix}-disabled {
                color: set-disable-text-color($color) !important;

                .#{$prefix}-list-tile-leading,
                .#{$prefix}-list-tile-action {
                    color: set-leading-disable-text-color($color);
                }
            }
        }

        @if (lightness($color) < 85) {
            &.#{$prefix}-border-left,
            &.#{$prefix}-border-left-right,
            &.#{$prefix}-border-top,
            &.#{$prefix}-border-top-bottom {
                > .#{$prefix}-list-tile {
                    &.active, &.#{$prefix}-active {
                        > .#{$prefix}-ripple {
                            &:before {
                                background: lighten(set-hoverable-bgcolor($color, .25), 35%);
                            }
                        }
                    }
                }
            }

            &.#{$prefix}-border-right,
            &.#{$prefix}-border-left-right,
            &.#{$prefix}-border-bottom,
            &.#{$prefix}-border-top-bottom {
                > .#{$prefix}-list-tile {
                    &.active, &.#{$prefix}-active {
                        > .#{$prefix}-ripple {
                            &:after {
                                background: lighten(set-hoverable-bgcolor($color, .25), 35%);
                            }
                        }
                    }
                }
            }
        }
    }
}

/* BsListNav mixins */
@mixin bslist-nav-variant($name, $color) {
    .#{$prefix}-list-#{$name} {
        > .#{$prefix}-list-nav {
            .#{$prefix}-nav-item {
                > .#{$prefix}-nav-item-inner {
                    @if (lightness($color) > 50) {
                        color: $gray-900;
                    } @else {
                        color: rgba($white-base, .8);
                    }

                    .#{$prefix}-icon {
                        &:not(.icon-expand-more) {
                            color: set-leading-text-color($color);
                        }
                    }
                }

                &.#{$prefix}-disabled {
                    > .#{$prefix}-nav-item-inner {
                        color: set-disable-text-color($color);

                        .#{$prefix}-icon {
                            &:not(.icon-expand-more) {
                                color: set-leading-disable-text-color($color);
                            }
                        }
                    }
                }

                &:hover:not(.#{$prefix}-expanded) {
                    > .#{$prefix}-nav-item-inner {
                        @if (lightness($color) > 80) {
                            background-color: $default-hover-bgcolor;
                        } @else {
                            background-color: rgba(darken($color, 10%), .25);
                        }
                    }
                }

                @if (lightness($color) < 90) {
                    &.#{$prefix}-expanded {
                        background-color: set-hoverable-bgcolor($color, 0);
                    }
                }

                &.#{$prefix}-active {
                    &:not(.#{$prefix}-parent),
                    &.#{$prefix}-parent:not(.#{$prefix}-expanded) {
                        > .#{$prefix}-nav-item-inner {
                            background-color: set-hoverable-bgcolor($color, .22);
                            @if (lightness($color) > 80) {
                                color: $primary-color-dark;

                                .#{$prefix}-icon {
                                    &:not(.icon-expand-more) {
                                        color: rgba($primary-color-dark, .54);
                                    }
                                }
                            } @else {
                                color: $white;

                                .#{$prefix}-icon {
                                    &:not(.icon-expand-more) {
                                        color: rgba($white-base, .8);
                                    }
                                }
                            }
                        }
                    }
                }

                @if (lightness($color) < 81) {
                    &.#{$prefix}-expanded {
                        border-color: rgba($white-base, .1);
                    }
                }
            }
        }

        @if (lightness($color) < 85) {
            &.#{$prefix}-border-left,
            &.#{$prefix}-border-left-right,
            &.#{$prefix}-border-top,
            &.#{$prefix}-border-top-bottom {
                > .#{$prefix}-list-nav {
                    .#{$prefix}-nav-item {
                        &.#{$prefix}-active {
                            &:not(.#{$prefix}-parent) {
                                > .#{$prefix}-nav-item-inner {
                                    > .#{$prefix}-ripple {
                                        &:before {
                                            background: lighten(set-hoverable-bgcolor($color, .25), 35%); // rgba(lighten($color, 85%), .3);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }

            &.#{$prefix}-border-right,
            &.#{$prefix}-border-left-right,
            &.#{$prefix}-border-bottom,
            &.#{$prefix}-border-top-bottom {
                > .#{$prefix}-list-nav {
                    .#{$prefix}-nav-item {
                        &.#{$prefix}-active {
                            &:not(.#{$prefix}-parent) {
                                > .#{$prefix}-nav-item-inner {
                                    > .#{$prefix}-ripple {
                                        &:after {
                                            background: lighten(set-hoverable-bgcolor($color, .25), 35%);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

/* Transition mixins */
@mixin enter($parent) {
    #{$parent}-enter {
        @content;
    }
}

@mixin enterTo($parent) {
    #{$parent}-enter-to {
        @content;
    }
}

@mixin enterActive($parent) {
    #{$parent}-enter-active {
        @content;
    }
}

@mixin enterActive-leaveActive($parent) {
    #{$parent}-enter-active,
    #{$parent}-leave-active {
        @content;
    }
}

@mixin enter-leaveActive($parent) {
    #{$parent}-enter,
    #{$parent}-leave-active {
        @content;
    }
}

@mixin enter-leaveTo($parent) {
    #{$parent}-enter,
    #{$parent}-leave-to {
        @content;
    }
}

@mixin leaveActive($parent) {
    #{$parent}-leave-active {
        @content;
    }
}

@mixin leaveTo($parent) {
    #{$parent}-leave-to {
        @content;
    }
}

@mixin leave-leaveActive-leaveTo($parent) {
    #{$parent}-leave,
    #{$parent}-leave-active,
    #{$parent}-leave-to {
        @content;
    }
}

/* Input Placeholder mixins */
@mixin decorate-input-placeholder {
    &::placeholder {
        color: $gray-700;
        font-weight: $font-weight-light;
    }

    &::-moz-placeholder {
        color: $gray-700;
        font-weight: $font-weight-light;
    }

    &::-webkit-input-placeholder {
        color: $gray-700;
        font-weight: $font-weight-light;
    }

    &:-ms-input-placeholder {
        color: $gray-700;
        font-weight: $font-weight-light;
    }
}
